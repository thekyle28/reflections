What happens when you initialize a repository? What do you need to do?

To initialize a repository you use the command git init, and initializing a repository creates an .git file, which holds meta data for the history of the files in that directory. But it does not commit until you commit your first one.

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area allows you to build up specific files that you wish to commit before pushing them into the online repository. 

How can you use the staging area to make sure you have one commit per logical change?

You can use the staging area to check differences between your current working directory and the staging area to make sure that you only have one logical change for your next commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches would be helpful to use when you wish to create an experimental feature, and they would also be useful if you wish to create a version of the current repository, but slighlty changed, such as an easier version of the asteroids game, or a version of the game in a different language.